apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: report
    control-plane: controller-manager
  name: starboard-report-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: report
  name: starboard-report-controller-manager
  namespace: starboard-report-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: report
  name: starboard-report-manager-role
rules:
- apiGroups:
  - aquasecurity.github.io
  resources:
  - configauditreports
  - vulnerabilityreports
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - aquasecurity.github.io
  resources:
  - configauditreports/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
  - delete
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
  - delete
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: report
  name: starboard-report-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: starboard-report-manager-role
subjects:
- kind: ServiceAccount
  name: starboard-report-controller-manager
  namespace: starboard-report-system
---
apiVersion: v1
data:
  nginx.conf: |
    worker_processes  3;
    pid /tmp/nginx.pid; # Changed from /var/run/nginx.pid
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       8080; # Changed from default 80 port
          server_name  _;
          location / {
              root /usr/share/nginx/html;
              autoindex on;
          }
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: report
  name: starboard-report-nginx-conf
  namespace: starboard-report-system
---
apiVersion: v1
data:
  namespaceWatch: default
kind: ConfigMap
metadata:
  labels:
    app: report
  name: starboard-report-report
  namespace: starboard-report-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: report
  name: starboard-report-report
  namespace: starboard-report-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: report
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: report
    control-plane: controller-manager
  name: starboard-report-controller-manager
  namespace: starboard-report-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: report
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app: report
        control-plane: controller-manager
    spec:
      containers:
      - image: nginxinc/nginx-unprivileged:1.16.1-alpine
        name: nginx
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: storage
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx.conf
      - args:
        - --leader-elect
        - --namespace=$(NAMESPACE_WATCH)
        command:
        - /manager
        env:
        - name: NAMESPACE_WATCH
          valueFrom:
            configMapKeyRef:
              key: namespaceWatch
              name: starboard-report-report
        image: quay.io/pengli1707/starboardcontroller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /report
          name: storage
      securityContext:
        runAsNonRoot: true
      serviceAccountName: starboard-report-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: storage
      - configMap:
          name: starboard-report-nginx-conf
        name: nginx-config
